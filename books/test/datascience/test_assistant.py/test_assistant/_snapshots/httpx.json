{
    "7531e8e8e4823e53196d8c61ea752788e230b59a": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "",
            "hash": "7531e8e8e4823e53196d8c61ea752788e230b59a"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:10 GMT",
                "content-type": "application/json",
                "content-length": "1410",
                "connection": "keep-alive",
                "apim-request-id": "0dcd5eba-36c9-46fa-9e52-8237a2f596a6",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "87",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "72765",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d114-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "c71ca1bf-8660-4a63-9546-b74aee64737f",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiQm9va3Rlc3QgaXMgYSBQeXRob24gdGVzdGluZyBmcmFtZXdvcmsgZm9yIGRhdGEgc2NpZW5jZSBhbmQgTExNIHdvcmtmbG93cyB0aGF0IHRyZWF0cyB0ZXN0IG91dHB1dHMgYXMgaHVtYW4tcmVhZGFibGUsIEdpdC10cmFja2VkIG1hcmtkb3duIHNuYXBzaG90cyBpbnN0ZWFkIG9mIGJpbmFyeSBhc3NlcnRzLiBJdCBjb21iaW5lcyBidWlsZC1zdHlsZSBjYWNoaW5nL2RlcGVuZGVuY2llcywgdG9sZXJhbmNlLWJhc2VkIG1ldHJpY3MsIEhUVFAvTExNIHNuYXBzaG90dGluZywgYW5kIEFJLWFzc2lzdGVkIHJldmlldy9kaWZmaW5nIHRvIG1ha2Ugbm9uLWRldGVybWluaXN0aWMgb3V0cHV0cyByZXZpZXdhYmxlIGFuZCByZWdyZXNzaW9ucyBtYW5hZ2VhYmxlLiIsInJlZnVzYWwiOm51bGwsInJvbGUiOiJhc3Npc3RhbnQifX1dLCJjcmVhdGVkIjoxNzYwOTQ3OTg3LCJpZCI6ImNoYXRjbXBsLUNTZklwWFduWDRHMjhnM3NIRXF3NUNpNklXc2owIiwibW9kZWwiOiJncHQtNS1taW5pLTIwMjUtMDgtMDciLCJvYmplY3QiOiJjaGF0LmNvbXBsZXRpb24iLCJwcm9tcHRfZmlsdGVyX3Jlc3VsdHMiOlt7InByb21wdF9pbmRleCI6MCwiY29udGVudF9maWx0ZXJfcmVzdWx0cyI6eyJoYXRlIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNlbGZfaGFybSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJzZXh1YWwiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwidmlvbGVuY2UiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifX19XSwic3lzdGVtX2ZpbmdlcnByaW50IjpudWxsLCJ1c2FnZSI6eyJjb21wbGV0aW9uX3Rva2VucyI6MjEwLCJjb21wbGV0aW9uX3Rva2Vuc19kZXRhaWxzIjp7ImFjY2VwdGVkX3ByZWRpY3Rpb25fdG9rZW5zIjowLCJhdWRpb190b2tlbnMiOjAsInJlYXNvbmluZ190b2tlbnMiOjEyOCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjo4NTE3LCJwcm9tcHRfdG9rZW5zX2RldGFpbHMiOnsiYXVkaW9fdG9rZW5zIjowLCJjYWNoZWRfdG9rZW5zIjoyNjg4fSwidG90YWxfdG9rZW5zIjo4NzI3fX0K"
        }
    },
    "8e56782d5add7efc861fd66b10681099bf434c85": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBzbmFwc2hvdCBvciByZXZpZXctZHJpdmVuIHRlc3Rpbmc/IChZZXN8UGFydGlhbGx5fE5vKVxuXG4qKlF1ZXN0aW9uOioqIFdoYXQgaXMgYm9va3Rlc3Q/XG5cbioqQW5zd2VyOioqXG5Cb29rdGVzdCBpcyBhIFB5dGhvbiB0ZXN0aW5nIGZyYW1ld29yayBmb3IgZGF0YSBzY2llbmNlIGFuZCBMTE0gd29ya2Zsb3dzIHRoYXQgdHJlYXRzIHRlc3Qgb3V0cHV0cyBhcyBodW1hbi1yZWFkYWJsZSwgR2l0LXRyYWNrZWQgbWFya2Rvd24gc25hcHNob3RzIGluc3RlYWQgb2YgYmluYXJ5IGFzc2VydHMuIEl0IGNvbWJpbmVzIGJ1aWxkLXN0eWxlIGNhY2hpbmcvZGVwZW5kZW5jaWVzLCB0b2xlcmFuY2UtYmFzZWQgbWV0cmljcywgSFRUUC9MTE0gc25hcHNob3R0aW5nLCBhbmQgQUktYXNzaXN0ZWQgcmV2aWV3L2RpZmZpbmcgdG8gbWFrZSBub24tZGV0ZXJtaW5pc3RpYyBvdXRwdXRzIHJldmlld2FibGUgYW5kIHJlZ3Jlc3Npb25zIG1hbmFnZWFibGUuXG5cblxuIyMjIyBFdmFsdWF0aW9uOlxuIn1dLCAibW9kZWwiOiAiZ3B0LTUtbWluaSIsICJtYXhfY29tcGxldGlvbl90b2tlbnMiOiAxMDI0LCAic2VlZCI6IDB9",
            "hash": "8e56782d5add7efc861fd66b10681099bf434c85"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:11 GMT",
                "content-type": "application/json",
                "content-length": "1033",
                "connection": "keep-alive",
                "apim-request-id": "1ef7d8ef-9681-470b-9445-b7e123a24e8b",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "86",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "72557",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d114-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "b102a6ba-c354-4c70-9546-859db3ee000a",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDc5OTAsImlkIjoiY2hhdGNtcGwtQ1NmSXNXOTVPRDJYRDlvN0hQMmU5REN6dDFxcE8iLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoxNzcsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjI1Mn19Cg=="
        }
    },
    "f8b3073b2069c77be33a0c4f142ecce6db8394ee": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBkYXRhIHNjaWVuY2UgZm9jdXM/IChZZXN8UGFydGlhbGx5fE5vKVxuXG4qKlF1ZXN0aW9uOioqIFdoYXQgaXMgYm9va3Rlc3Q/XG5cbioqQW5zd2VyOioqXG5Cb29rdGVzdCBpcyBhIFB5dGhvbiB0ZXN0aW5nIGZyYW1ld29yayBmb3IgZGF0YSBzY2llbmNlIGFuZCBMTE0gd29ya2Zsb3dzIHRoYXQgdHJlYXRzIHRlc3Qgb3V0cHV0cyBhcyBodW1hbi1yZWFkYWJsZSwgR2l0LXRyYWNrZWQgbWFya2Rvd24gc25hcHNob3RzIGluc3RlYWQgb2YgYmluYXJ5IGFzc2VydHMuIEl0IGNvbWJpbmVzIGJ1aWxkLXN0eWxlIGNhY2hpbmcvZGVwZW5kZW5jaWVzLCB0b2xlcmFuY2UtYmFzZWQgbWV0cmljcywgSFRUUC9MTE0gc25hcHNob3R0aW5nLCBhbmQgQUktYXNzaXN0ZWQgcmV2aWV3L2RpZmZpbmcgdG8gbWFrZSBub24tZGV0ZXJtaW5pc3RpYyBvdXRwdXRzIHJldmlld2FibGUgYW5kIHJlZ3Jlc3Npb25zIG1hbmFnZWFibGUuXG5cblxuIyMjIyBFdmFsdWF0aW9uOlxuIn1dLCAibW9kZWwiOiAiZ3B0LTUtbWluaSIsICJtYXhfY29tcGxldGlvbl90b2tlbnMiOiAxMDI0LCAic2VlZCI6IDB9",
            "hash": "f8b3073b2069c77be33a0c4f142ecce6db8394ee"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:13 GMT",
                "content-type": "application/json",
                "content-length": "1033",
                "connection": "keep-alive",
                "apim-request-id": "bffac355-0f07-4a4d-961a-c4418104338a",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "85",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "72353",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d115-20251018210456",
                "x-ms-rai-invoked": "true",
                "x-request-id": "0ce13935-10eb-4769-a8b6-93d636fdf0e2",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDc5OTIsImlkIjoiY2hhdGNtcGwtQ1NmSXVyaUlmTmtFbW5PMmxkUGNRVWZwdUFBeVEiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoxNzUsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjI1MH19Cg=="
        }
    },
    "cc46db0abc180751a85d238f59f06ae988f1c2cc": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBHaXQtdHJhY2tlZCByZXN1bHRzPyAoWWVzfFBhcnRpYWxseXxObylcblxuKipRdWVzdGlvbjoqKiBXaGF0IGlzIGJvb2t0ZXN0P1xuXG4qKkFuc3dlcjoqKlxuQm9va3Rlc3QgaXMgYSBQeXRob24gdGVzdGluZyBmcmFtZXdvcmsgZm9yIGRhdGEgc2NpZW5jZSBhbmQgTExNIHdvcmtmbG93cyB0aGF0IHRyZWF0cyB0ZXN0IG91dHB1dHMgYXMgaHVtYW4tcmVhZGFibGUsIEdpdC10cmFja2VkIG1hcmtkb3duIHNuYXBzaG90cyBpbnN0ZWFkIG9mIGJpbmFyeSBhc3NlcnRzLiBJdCBjb21iaW5lcyBidWlsZC1zdHlsZSBjYWNoaW5nL2RlcGVuZGVuY2llcywgdG9sZXJhbmNlLWJhc2VkIG1ldHJpY3MsIEhUVFAvTExNIHNuYXBzaG90dGluZywgYW5kIEFJLWFzc2lzdGVkIHJldmlldy9kaWZmaW5nIHRvIG1ha2Ugbm9uLWRldGVybWluaXN0aWMgb3V0cHV0cyByZXZpZXdhYmxlIGFuZCByZWdyZXNzaW9ucyBtYW5hZ2VhYmxlLlxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcbiJ9XSwgIm1vZGVsIjogImdwdC01LW1pbmkiLCAibWF4X2NvbXBsZXRpb25fdG9rZW5zIjogMTAyNCwgInNlZWQiOiAwfQ==",
            "hash": "cc46db0abc180751a85d238f59f06ae988f1c2cc"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:14 GMT",
                "content-type": "application/json",
                "content-length": "1033",
                "connection": "keep-alive",
                "apim-request-id": "87235ce1-022c-4e57-9a9a-f5f0a3711135",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "84",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "72148",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d113-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "240a0691-a3f9-4973-bdf7-4be33a48b7ef",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDc5OTMsImlkIjoiY2hhdGNtcGwtQ1NmSXZWczZEczVrTUlwOW5GTjBaWjd0anJzSGciLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoxNzYsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjI1MX19Cg=="
        }
    },
    "73f29564ef48c7d7f3d7c790875ae0a2d4d8b31c": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSG93IGNsZWFyIGFuZCBjb25jaXNlIGlzIHRoZSBleHBsYW5hdGlvbj8gKEV4Y2VsbGVudHxHb29kfFBvb3IpXG5cbioqUXVlc3Rpb246KiogV2hhdCBpcyBib29rdGVzdD9cblxuKipBbnN3ZXI6KipcbkJvb2t0ZXN0IGlzIGEgUHl0aG9uIHRlc3RpbmcgZnJhbWV3b3JrIGZvciBkYXRhIHNjaWVuY2UgYW5kIExMTSB3b3JrZmxvd3MgdGhhdCB0cmVhdHMgdGVzdCBvdXRwdXRzIGFzIGh1bWFuLXJlYWRhYmxlLCBHaXQtdHJhY2tlZCBtYXJrZG93biBzbmFwc2hvdHMgaW5zdGVhZCBvZiBiaW5hcnkgYXNzZXJ0cy4gSXQgY29tYmluZXMgYnVpbGQtc3R5bGUgY2FjaGluZy9kZXBlbmRlbmNpZXMsIHRvbGVyYW5jZS1iYXNlZCBtZXRyaWNzLCBIVFRQL0xMTSBzbmFwc2hvdHRpbmcsIGFuZCBBSS1hc3Npc3RlZCByZXZpZXcvZGlmZmluZyB0byBtYWtlIG5vbi1kZXRlcm1pbmlzdGljIG91dHB1dHMgcmV2aWV3YWJsZSBhbmQgcmVncmVzc2lvbnMgbWFuYWdlYWJsZS5cblxuXG4jIyMjIEV2YWx1YXRpb246XG5cbiMjIyMgUXVhbGl0eSByYXRpbmdzOlxuIn1dLCAibW9kZWwiOiAiZ3B0LTUtbWluaSIsICJtYXhfY29tcGxldGlvbl90b2tlbnMiOiAxMDI0LCAic2VlZCI6IDB9",
            "hash": "73f29564ef48c7d7f3d7c790875ae0a2d4d8b31c"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:17 GMT",
                "content-type": "application/json",
                "content-length": "1039",
                "connection": "keep-alive",
                "apim-request-id": "3dab7196-a063-4191-813a-40e21117d956",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "83",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71937",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d115-20251018210456",
                "x-ms-rai-invoked": "true",
                "x-request-id": "441aa37c-3318-4aac-a17d-42728aa01d69",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiRXhjZWxsZW50IiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDc5OTUsImlkIjoiY2hhdGNtcGwtQ1NmSXhtUkxBNHllOEk2eGxub0lKRFc4MEk2bG4iLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoxNzksInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjI1NH19Cg=="
        }
    },
    "b1588140ecef4438f8ce3138e4aa10eb93f5425b": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSG93IGNvbXBlbGxpbmcgaXMgdGhlIHZhbHVlIHByb3Bvc2l0aW9uIGZvciB1c2luZyBib29rdGVzdD8gKEV4Y2VsbGVudHxHb29kfFBvb3IpXG5cbioqUXVlc3Rpb246KiogV2hhdCBpcyBib29rdGVzdD9cblxuKipBbnN3ZXI6KipcbkJvb2t0ZXN0IGlzIGEgUHl0aG9uIHRlc3RpbmcgZnJhbWV3b3JrIGZvciBkYXRhIHNjaWVuY2UgYW5kIExMTSB3b3JrZmxvd3MgdGhhdCB0cmVhdHMgdGVzdCBvdXRwdXRzIGFzIGh1bWFuLXJlYWRhYmxlLCBHaXQtdHJhY2tlZCBtYXJrZG93biBzbmFwc2hvdHMgaW5zdGVhZCBvZiBiaW5hcnkgYXNzZXJ0cy4gSXQgY29tYmluZXMgYnVpbGQtc3R5bGUgY2FjaGluZy9kZXBlbmRlbmNpZXMsIHRvbGVyYW5jZS1iYXNlZCBtZXRyaWNzLCBIVFRQL0xMTSBzbmFwc2hvdHRpbmcsIGFuZCBBSS1hc3Npc3RlZCByZXZpZXcvZGlmZmluZyB0byBtYWtlIG5vbi1kZXRlcm1pbmlzdGljIG91dHB1dHMgcmV2aWV3YWJsZSBhbmQgcmVncmVzc2lvbnMgbWFuYWdlYWJsZS5cblxuXG4jIyMjIEV2YWx1YXRpb246XG5cbiMjIyMgUXVhbGl0eSByYXRpbmdzOlxuIn1dLCAibW9kZWwiOiAiZ3B0LTUtbWluaSIsICJtYXhfY29tcGxldGlvbl90b2tlbnMiOiAxMDI0LCAic2VlZCI6IDB9",
            "hash": "b1588140ecef4438f8ce3138e4aa10eb93f5425b"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:19 GMT",
                "content-type": "application/json",
                "content-length": "1041",
                "connection": "keep-alive",
                "apim-request-id": "0aac96c6-5f93-4d45-9257-7b4ae2c632ac",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "82",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71721",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d114-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "2495fc74-486d-4963-8895-0ad293c4e9ad",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiRXhjZWxsZW50IiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDc5OTcsImlkIjoiY2hhdGNtcGwtQ1NmSXpjVVFrb0NRNmJZbTZNZzlpMEc0cHJWaXAiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoxMzksImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTI4LCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjE4MiwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6MzIxfX0K"
        }
    },
    "4e4771daf4816b7f8f8409eb2730221b3593c2b6": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "",
            "hash": "4e4771daf4816b7f8f8409eb2730221b3593c2b6"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:23 GMT",
                "content-type": "application/json",
                "content-length": "1352",
                "connection": "keep-alive",
                "apim-request-id": "b6314bf7-8dc7-441c-a156-d30edf32f833",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "81",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "63304",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d114-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "8c818702-9c70-4be4-8dcc-55b555d4e954",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiVXNlIGJvb2t0ZXN0IGZvciBkYXRh4oCRc2NpZW5jZSBvciBMTE0gd29ya2Zsb3dzIHdoZXJlIG91dHB1dHMgYXJlIG5vbuKAkWRldGVybWluaXN0aWMgb3Igc3ViamVjdGl2ZSBhbmQgbmVlZCBodW1hbi9BSSByZXZpZXcsIHRvbGVyYW5jZeKAkWJhc2VkIG1ldHJpY3MsIHNuYXBzaG90IGRpZmZzLCBIVFRQL0xMTSBtb2NraW5nLCBhbmQgaW5jcmVtZW50YWwvY2FjaGVkIHBpcGVsaW5lcy4gRm9yIHRyYWRpdGlvbmFsIGRldGVybWluaXN0aWMgdW5pdCB0ZXN0cyB3aXRoIHN0cmljdCBwYXNzL2ZhaWwgYXNzZXJ0aW9ucywgc3RpY2sgd2l0aCBweXRlc3QuIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMDAsImlkIjoiY2hhdGNtcGwtQ1NmSjJ5SllkM1NzVjZLTVBtMndGb3ZTMmZUenUiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoyMDMsImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTI4LCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjg1MjIsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjg0NDh9LCJ0b3RhbF90b2tlbnMiOjg3MjV9fQo="
        }
    },
    "7943f10e477b97133642865f6545f14593f21adf": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBleHBlcnQgcmV2aWV3IG5lZWRzPyAoWWVzfFBhcnRpYWxseXxObylcblxuKipRdWVzdGlvbjoqKiBXaGVuIHNob3VsZCBJIHVzZSBib29rdGVzdCBpbnN0ZWFkIG9mIHB5dGVzdD9cblxuKipBbnN3ZXI6KipcblVzZSBib29rdGVzdCBmb3IgZGF0YVx1MjAxMXNjaWVuY2Ugb3IgTExNIHdvcmtmbG93cyB3aGVyZSBvdXRwdXRzIGFyZSBub25cdTIwMTFkZXRlcm1pbmlzdGljIG9yIHN1YmplY3RpdmUgYW5kIG5lZWQgaHVtYW4vQUkgcmV2aWV3LCB0b2xlcmFuY2VcdTIwMTFiYXNlZCBtZXRyaWNzLCBzbmFwc2hvdCBkaWZmcywgSFRUUC9MTE0gbW9ja2luZywgYW5kIGluY3JlbWVudGFsL2NhY2hlZCBwaXBlbGluZXMuIEZvciB0cmFkaXRpb25hbCBkZXRlcm1pbmlzdGljIHVuaXQgdGVzdHMgd2l0aCBzdHJpY3QgcGFzcy9mYWlsIGFzc2VydGlvbnMsIHN0aWNrIHdpdGggcHl0ZXN0LlxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcbiJ9XSwgIm1vZGVsIjogImdwdC01LW1pbmkiLCAibWF4X2NvbXBsZXRpb25fdG9rZW5zIjogMTAyNCwgInNlZWQiOiAwfQ==",
            "hash": "7943f10e477b97133642865f6545f14593f21adf"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:27 GMT",
                "content-type": "application/json",
                "content-length": "1035",
                "connection": "keep-alive",
                "apim-request-id": "c17bdd97-4463-406a-b51e-f70a7e463bb6",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "81",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71517",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d034-20251018202208",
                "x-ms-rai-invoked": "true",
                "x-request-id": "f7660a85-ab26-40b5-8a51-750a5cdecde1",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMDMsImlkIjoiY2hhdGNtcGwtQ1NmSjV5aUltdm1UdzNEbVh0cGk5a09zUjdHQ0ciLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoyMDMsImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTkyLCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjE3MywicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6Mzc2fX0K"
        }
    },
    "b3c40ea9932cb526b0cd994c53a2265e69a49b22": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBub24tZGV0ZXJtaW5pc3RpYyBvciBwcm9iYWJpbGlzdGljIHJlc3VsdHM/IChZZXN8UGFydGlhbGx5fE5vKVxuXG4qKlF1ZXN0aW9uOioqIFdoZW4gc2hvdWxkIEkgdXNlIGJvb2t0ZXN0IGluc3RlYWQgb2YgcHl0ZXN0P1xuXG4qKkFuc3dlcjoqKlxuVXNlIGJvb2t0ZXN0IGZvciBkYXRhXHUyMDExc2NpZW5jZSBvciBMTE0gd29ya2Zsb3dzIHdoZXJlIG91dHB1dHMgYXJlIG5vblx1MjAxMWRldGVybWluaXN0aWMgb3Igc3ViamVjdGl2ZSBhbmQgbmVlZCBodW1hbi9BSSByZXZpZXcsIHRvbGVyYW5jZVx1MjAxMWJhc2VkIG1ldHJpY3MsIHNuYXBzaG90IGRpZmZzLCBIVFRQL0xMTSBtb2NraW5nLCBhbmQgaW5jcmVtZW50YWwvY2FjaGVkIHBpcGVsaW5lcy4gRm9yIHRyYWRpdGlvbmFsIGRldGVybWluaXN0aWMgdW5pdCB0ZXN0cyB3aXRoIHN0cmljdCBwYXNzL2ZhaWwgYXNzZXJ0aW9ucywgc3RpY2sgd2l0aCBweXRlc3QuXG5cblxuIyMjIyBFdmFsdWF0aW9uOlxuIn1dLCAibW9kZWwiOiAiZ3B0LTUtbWluaSIsICJtYXhfY29tcGxldGlvbl90b2tlbnMiOiAxMDI0LCAic2VlZCI6IDB9",
            "hash": "b3c40ea9932cb526b0cd994c53a2265e69a49b22"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:29 GMT",
                "content-type": "application/json",
                "content-length": "1035",
                "connection": "keep-alive",
                "apim-request-id": "7510a7ca-e789-489d-bfed-c54fe225e8de",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "80",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71316",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d034-20251018202208",
                "x-ms-rai-invoked": "true",
                "x-request-id": "460ebcd8-e326-40d6-bbb2-95cf489d297c",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMDcsImlkIjoiY2hhdGNtcGwtQ1NmSjlKdWZhMEkwYVUwSGNvQ200Yjc4T1A5RkoiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoxMzksImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTI4LCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjE3OCwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6MzE3fX0K"
        }
    },
    "231c80d429f335b459a3c3c192cd671dd79d5899": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBkYXRhIHNjaWVuY2Ugd29ya2Zsb3dzIG9yIGNhY2hpbmc/IChZZXN8UGFydGlhbGx5fE5vKVxuXG4qKlF1ZXN0aW9uOioqIFdoZW4gc2hvdWxkIEkgdXNlIGJvb2t0ZXN0IGluc3RlYWQgb2YgcHl0ZXN0P1xuXG4qKkFuc3dlcjoqKlxuVXNlIGJvb2t0ZXN0IGZvciBkYXRhXHUyMDExc2NpZW5jZSBvciBMTE0gd29ya2Zsb3dzIHdoZXJlIG91dHB1dHMgYXJlIG5vblx1MjAxMWRldGVybWluaXN0aWMgb3Igc3ViamVjdGl2ZSBhbmQgbmVlZCBodW1hbi9BSSByZXZpZXcsIHRvbGVyYW5jZVx1MjAxMWJhc2VkIG1ldHJpY3MsIHNuYXBzaG90IGRpZmZzLCBIVFRQL0xMTSBtb2NraW5nLCBhbmQgaW5jcmVtZW50YWwvY2FjaGVkIHBpcGVsaW5lcy4gRm9yIHRyYWRpdGlvbmFsIGRldGVybWluaXN0aWMgdW5pdCB0ZXN0cyB3aXRoIHN0cmljdCBwYXNzL2ZhaWwgYXNzZXJ0aW9ucywgc3RpY2sgd2l0aCBweXRlc3QuXG5cblxuIyMjIyBFdmFsdWF0aW9uOlxuIn1dLCAibW9kZWwiOiAiZ3B0LTUtbWluaSIsICJtYXhfY29tcGxldGlvbl90b2tlbnMiOiAxMDI0LCAic2VlZCI6IDB9",
            "hash": "231c80d429f335b459a3c3c192cd671dd79d5899"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:32 GMT",
                "content-type": "application/json",
                "content-length": "1035",
                "connection": "keep-alive",
                "apim-request-id": "eb388d98-945c-4c47-9257-b85299905c35",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "79",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71117",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d036-20251018202208",
                "x-ms-rai-invoked": "true",
                "x-request-id": "58f3d377-05a3-478b-830a-dbae31d77717",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMTAsImlkIjoiY2hhdGNtcGwtQ1NmSkM5U2w2NWpNbUJjYk4wNmp0SGRSUmhuOFciLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoxMzksImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTI4LCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjE3NSwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6MzE0fX0K"
        }
    },
    "8f3249aab2b2ee911357d24fc182c0045f363964": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSG93IGNsZWFybHkgYXJlIHRoZSB1c2UgY2FzZXMgZGlmZmVyZW50aWF0ZWQ/IChFeGNlbGxlbnR8R29vZHxQb29yKVxuXG4qKlF1ZXN0aW9uOioqIFdoZW4gc2hvdWxkIEkgdXNlIGJvb2t0ZXN0IGluc3RlYWQgb2YgcHl0ZXN0P1xuXG4qKkFuc3dlcjoqKlxuVXNlIGJvb2t0ZXN0IGZvciBkYXRhXHUyMDExc2NpZW5jZSBvciBMTE0gd29ya2Zsb3dzIHdoZXJlIG91dHB1dHMgYXJlIG5vblx1MjAxMWRldGVybWluaXN0aWMgb3Igc3ViamVjdGl2ZSBhbmQgbmVlZCBodW1hbi9BSSByZXZpZXcsIHRvbGVyYW5jZVx1MjAxMWJhc2VkIG1ldHJpY3MsIHNuYXBzaG90IGRpZmZzLCBIVFRQL0xMTSBtb2NraW5nLCBhbmQgaW5jcmVtZW50YWwvY2FjaGVkIHBpcGVsaW5lcy4gRm9yIHRyYWRpdGlvbmFsIGRldGVybWluaXN0aWMgdW5pdCB0ZXN0cyB3aXRoIHN0cmljdCBwYXNzL2ZhaWwgYXNzZXJ0aW9ucywgc3RpY2sgd2l0aCBweXRlc3QuXG5cblxuIyMjIyBFdmFsdWF0aW9uOlxuXG4jIyMjIFF1YWxpdHkgcmF0aW5nczpcbiJ9XSwgIm1vZGVsIjogImdwdC01LW1pbmkiLCAibWF4X2NvbXBsZXRpb25fdG9rZW5zIjogMTAyNCwgInNlZWQiOiAwfQ==",
            "hash": "8f3249aab2b2ee911357d24fc182c0045f363964"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:34 GMT",
                "content-type": "application/json",
                "content-length": "1039",
                "connection": "keep-alive",
                "apim-request-id": "74cc2958-a11b-4ac3-abe0-28c2201b6132",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "79",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71119",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d119-20251018214812",
                "x-ms-rai-invoked": "true",
                "x-request-id": "682fa154-e658-4582-9fc6-20f8c50928ed",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiRXhjZWxsZW50IiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMTIsImlkIjoiY2hhdGNtcGwtQ1NmSkVIdnpQMDFoSmhWdVZ2bVVhNVNSZ2p5NWoiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoxNzcsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjI1Mn19Cg=="
        }
    },
    "eabf7dc83776b68ec8576c2c1abf8067334aecc3": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSG93IGhlbHBmdWwgd291bGQgdGhpcyBiZSBmb3Igc29tZW9uZSBjaG9vc2luZyBhIHRlc3RpbmcgZnJhbWV3b3JrPyAoRXhjZWxsZW50fEdvb2R8UG9vcilcblxuKipRdWVzdGlvbjoqKiBXaGVuIHNob3VsZCBJIHVzZSBib29rdGVzdCBpbnN0ZWFkIG9mIHB5dGVzdD9cblxuKipBbnN3ZXI6KipcblVzZSBib29rdGVzdCBmb3IgZGF0YVx1MjAxMXNjaWVuY2Ugb3IgTExNIHdvcmtmbG93cyB3aGVyZSBvdXRwdXRzIGFyZSBub25cdTIwMTFkZXRlcm1pbmlzdGljIG9yIHN1YmplY3RpdmUgYW5kIG5lZWQgaHVtYW4vQUkgcmV2aWV3LCB0b2xlcmFuY2VcdTIwMTFiYXNlZCBtZXRyaWNzLCBzbmFwc2hvdCBkaWZmcywgSFRUUC9MTE0gbW9ja2luZywgYW5kIGluY3JlbWVudGFsL2NhY2hlZCBwaXBlbGluZXMuIEZvciB0cmFkaXRpb25hbCBkZXRlcm1pbmlzdGljIHVuaXQgdGVzdHMgd2l0aCBzdHJpY3QgcGFzcy9mYWlsIGFzc2VydGlvbnMsIHN0aWNrIHdpdGggcHl0ZXN0LlxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcblxuIyMjIyBRdWFsaXR5IHJhdGluZ3M6XG4ifV0sICJtb2RlbCI6ICJncHQtNS1taW5pIiwgIm1heF9jb21wbGV0aW9uX3Rva2VucyI6IDEwMjQsICJzZWVkIjogMH0=",
            "hash": "eabf7dc83776b68ec8576c2c1abf8067334aecc3"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:36 GMT",
                "content-type": "application/json",
                "content-length": "1041",
                "connection": "keep-alive",
                "apim-request-id": "fc227a27-a96b-4867-8c68-42e335bfa563",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "79",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71111",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d118-20251018214812",
                "x-ms-rai-invoked": "true",
                "x-request-id": "f7fda8c6-6df6-4310-b261-60fedad3c212",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiRXhjZWxsZW50IiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMTQsImlkIjoiY2hhdGNtcGwtQ1NmSkdWQTBDSVJzR3puN3g0ODcydGQwam50VnIiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoxMzksImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTI4LCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjE4MSwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6MzIwfX0K"
        }
    },
    "5025793a66389863983c1d532f5a01507b9b42ba": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "",
            "hash": "5025793a66389863983c1d532f5a01507b9b42ba"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:46 GMT",
                "content-type": "application/json",
                "content-length": "1498",
                "connection": "keep-alive",
                "apim-request-id": "021bb0ba-1148-426f-a1cc-bd46072c6f1c",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "79",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "62895",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d114-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "599fc02c-c4a3-4429-9f4a-0d86bef53c59",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiQ3JlYXRlIHRlc3QvdGVzdF9maXp6YnV6ei5weSB0byBzbmFwc2hvdCBGaXp6QnV6eiBvdXRwdXQgKHNvIGZ1dHVyZSBjaGFuZ2VzIGFyZSByZXZpZXdhYmxlKS4gRXhhbXBsZTpcblxuYGBgcHl0aG9uXG5pbXBvcnQgYm9va3Rlc3QgYXMgYnRcblxuZGVmIGZpenpidXp6KG4pOlxuICAgIGlmIG4gJSAxNSA9PSAwOlxuICAgICAgICByZXR1cm4gXCJmaXp6YnV6elwiXG4gICAgaWYgbiAlIDMgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiZml6elwiXG4gICAgaWYgbiAlIDUgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiYnV6elwiXG4gICAgcmV0dXJuIHN0cihuKVxuXG5kZWYgdGVzdF9maXp6YnV6eih0OiBidC5UZXN0Q2FzZVJ1bik6XG4gICAgdC5oMShcIkZpenpCdXp6IDHigJMxNVwiKVxuICAgIGZvciBpIGluIHJhbmdlKDEsIDE2KTpcbiAgICAgICAgdC50bG4oZlwie2l9OiB7Zml6emJ1enooaSl9XCIpXG5gYGAiLCJyZWZ1c2FsIjpudWxsLCJyb2xlIjoiYXNzaXN0YW50In19XSwiY3JlYXRlZCI6MTc2MDk0ODAxNywiaWQiOiJjaGF0Y21wbC1DU2ZKSmVYQlZWVFdjcmFiSnVSOFJmNktkcmtQWSIsIm1vZGVsIjoiZ3B0LTUtbWluaS0yMDI1LTA4LTA3Iiwib2JqZWN0IjoiY2hhdC5jb21wbGV0aW9uIiwicHJvbXB0X2ZpbHRlcl9yZXN1bHRzIjpbeyJwcm9tcHRfaW5kZXgiOjAsImNvbnRlbnRfZmlsdGVyX3Jlc3VsdHMiOnsiaGF0ZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJzZWxmX2hhcm0iOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2V4dWFsIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInZpb2xlbmNlIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn19fV0sInN5c3RlbV9maW5nZXJwcmludCI6bnVsbCwidXNhZ2UiOnsiY29tcGxldGlvbl90b2tlbnMiOjc5MSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NDAsInJlamVjdGVkX3ByZWRpY3Rpb25fdG9rZW5zIjowfSwicHJvbXB0X3Rva2VucyI6ODUyMiwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6ODQ0OH0sInRvdGFsX3Rva2VucyI6OTMxM319Cg=="
        }
    },
    "aebda5c042cb2170666609920b704a28095cb29b": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBjb2RlIGluY2x1ZGUgJ2ltcG9ydCBib29rdGVzdCcgb3IgJ2ltcG9ydCBib29rdGVzdCBhcyBidCc/IChZZXN8UGFydGlhbGx5fE5vKVxuXG4qKlF1ZXN0aW9uOioqIFdyaXRlIGEgc2ltcGxlIGJvb2t0ZXN0IGV4YW1wbGUgZm9yIGZpenpidXp6XG5cbioqQW5zd2VyOioqXG5DcmVhdGUgdGVzdC90ZXN0X2ZpenpidXp6LnB5IHRvIHNuYXBzaG90IEZpenpCdXp6IG91dHB1dCAoc28gZnV0dXJlIGNoYW5nZXMgYXJlIHJldmlld2FibGUpLiBFeGFtcGxlOlxuXG5gYGBweXRob25cbmltcG9ydCBib29rdGVzdCBhcyBidFxuXG5kZWYgZml6emJ1enoobik6XG4gICAgaWYgbiAlIDE1ID09IDA6XG4gICAgICAgIHJldHVybiBcImZpenpidXp6XCJcbiAgICBpZiBuICUgMyA9PSAwOlxuICAgICAgICByZXR1cm4gXCJmaXp6XCJcbiAgICBpZiBuICUgNSA9PSAwOlxuICAgICAgICByZXR1cm4gXCJidXp6XCJcbiAgICByZXR1cm4gc3RyKG4pXG5cbmRlZiB0ZXN0X2ZpenpidXp6KHQ6IGJ0LlRlc3RDYXNlUnVuKTpcbiAgICB0LmgxKFwiRml6ekJ1enogMVx1MjAxMzE1XCIpXG4gICAgZm9yIGkgaW4gcmFuZ2UoMSwgMTYpOlxuICAgICAgICB0LnRsbihmXCJ7aX06IHtmaXp6YnV6eihpKX1cIilcbmBgYFxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcbiJ9XSwgIm1vZGVsIjogImdwdC01LW1pbmkiLCAibWF4X2NvbXBsZXRpb25fdG9rZW5zIjogMTAyNCwgInNlZWQiOiAwfQ==",
            "hash": "aebda5c042cb2170666609920b704a28095cb29b"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:49 GMT",
                "content-type": "application/json",
                "content-length": "1035",
                "connection": "keep-alive",
                "apim-request-id": "004c446e-17ad-4ad2-a9ca-f7cf9d0f3d77",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "80",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "63084",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d034-20251018202208",
                "x-ms-rai-invoked": "true",
                "x-request-id": "4f11f175-8cf6-4256-ac8f-4e1dab92bbeb",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMjcsImlkIjoiY2hhdGNtcGwtQ1NmSlRQYnc1WUY5d3pBWlo2Q2JLYlFxcWRMeWEiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoxMzksImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTI4LCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjI1OSwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6Mzk4fX0K"
        }
    },
    "f7584742add2988769a96624cbeccdb706a25e70": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBjb2RlIGRlZmluZSBhIHRlc3QgZnVuY3Rpb24gc3RhcnRpbmcgd2l0aCAndGVzdF8nPyAoWWVzfFBhcnRpYWxseXxObylcblxuKipRdWVzdGlvbjoqKiBXcml0ZSBhIHNpbXBsZSBib29rdGVzdCBleGFtcGxlIGZvciBmaXp6YnV6elxuXG4qKkFuc3dlcjoqKlxuQ3JlYXRlIHRlc3QvdGVzdF9maXp6YnV6ei5weSB0byBzbmFwc2hvdCBGaXp6QnV6eiBvdXRwdXQgKHNvIGZ1dHVyZSBjaGFuZ2VzIGFyZSByZXZpZXdhYmxlKS4gRXhhbXBsZTpcblxuYGBgcHl0aG9uXG5pbXBvcnQgYm9va3Rlc3QgYXMgYnRcblxuZGVmIGZpenpidXp6KG4pOlxuICAgIGlmIG4gJSAxNSA9PSAwOlxuICAgICAgICByZXR1cm4gXCJmaXp6YnV6elwiXG4gICAgaWYgbiAlIDMgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiZml6elwiXG4gICAgaWYgbiAlIDUgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiYnV6elwiXG4gICAgcmV0dXJuIHN0cihuKVxuXG5kZWYgdGVzdF9maXp6YnV6eih0OiBidC5UZXN0Q2FzZVJ1bik6XG4gICAgdC5oMShcIkZpenpCdXp6IDFcdTIwMTMxNVwiKVxuICAgIGZvciBpIGluIHJhbmdlKDEsIDE2KTpcbiAgICAgICAgdC50bG4oZlwie2l9OiB7Zml6emJ1enooaSl9XCIpXG5gYGBcblxuXG4jIyMjIEV2YWx1YXRpb246XG4ifV0sICJtb2RlbCI6ICJncHQtNS1taW5pIiwgIm1heF9jb21wbGV0aW9uX3Rva2VucyI6IDEwMjQsICJzZWVkIjogMH0=",
            "hash": "f7584742add2988769a96624cbeccdb706a25e70"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:51 GMT",
                "content-type": "application/json",
                "content-length": "1033",
                "connection": "keep-alive",
                "apim-request-id": "dfbf418d-962e-4b40-a740-eb0a7f7b46a9",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "79",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "62854",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d034-20251018202208",
                "x-ms-rai-invoked": "true",
                "x-request-id": "66a4ee5d-473c-467b-a657-d988dc8d6b75",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMjksImlkIjoiY2hhdGNtcGwtQ1NmSlZNbzhaOTAyem5od1o5S3pCSkNlOUJVZkYiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoyNTUsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjMzMH19Cg=="
        }
    },
    "2e7c5d9bea4b4bb42e2b682e7348bbba7eba6352": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBjb2RlIHVzZSBUZXN0Q2FzZVJ1biBwYXJhbWV0ZXIgKGxpa2UgJ3Q6IGJ0LlRlc3RDYXNlUnVuJyk/IChZZXN8UGFydGlhbGx5fE5vKVxuXG4qKlF1ZXN0aW9uOioqIFdyaXRlIGEgc2ltcGxlIGJvb2t0ZXN0IGV4YW1wbGUgZm9yIGZpenpidXp6XG5cbioqQW5zd2VyOioqXG5DcmVhdGUgdGVzdC90ZXN0X2ZpenpidXp6LnB5IHRvIHNuYXBzaG90IEZpenpCdXp6IG91dHB1dCAoc28gZnV0dXJlIGNoYW5nZXMgYXJlIHJldmlld2FibGUpLiBFeGFtcGxlOlxuXG5gYGBweXRob25cbmltcG9ydCBib29rdGVzdCBhcyBidFxuXG5kZWYgZml6emJ1enoobik6XG4gICAgaWYgbiAlIDE1ID09IDA6XG4gICAgICAgIHJldHVybiBcImZpenpidXp6XCJcbiAgICBpZiBuICUgMyA9PSAwOlxuICAgICAgICByZXR1cm4gXCJmaXp6XCJcbiAgICBpZiBuICUgNSA9PSAwOlxuICAgICAgICByZXR1cm4gXCJidXp6XCJcbiAgICByZXR1cm4gc3RyKG4pXG5cbmRlZiB0ZXN0X2ZpenpidXp6KHQ6IGJ0LlRlc3RDYXNlUnVuKTpcbiAgICB0LmgxKFwiRml6ekJ1enogMVx1MjAxMzE1XCIpXG4gICAgZm9yIGkgaW4gcmFuZ2UoMSwgMTYpOlxuICAgICAgICB0LnRsbihmXCJ7aX06IHtmaXp6YnV6eihpKX1cIilcbmBgYFxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcbiJ9XSwgIm1vZGVsIjogImdwdC01LW1pbmkiLCAibWF4X2NvbXBsZXRpb25fdG9rZW5zIjogMTAyNCwgInNlZWQiOiAwfQ==",
            "hash": "2e7c5d9bea4b4bb42e2b682e7348bbba7eba6352"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:55 GMT",
                "content-type": "application/json",
                "content-length": "1033",
                "connection": "keep-alive",
                "apim-request-id": "b5cd36c0-d749-4507-b321-18085e061a69",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "80",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71226",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d112-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "b40e07b7-d7a2-40e6-99e6-9e5413215698",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMzQsImlkIjoiY2hhdGNtcGwtQ1NmSmFWVFI4U1I5dVhlSXY3S0ljQTg1ZXB5ZWUiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoyNjEsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjMzNn19Cg=="
        }
    },
    "53be6da10d37425d11a9da1fccb6ae6729a5fef9": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBjb2RlIHVzZSBvdXRwdXQgbWV0aG9kcyBsaWtlIHQuaDEoKSBvciB0LnRsbigpPyAoWWVzfFBhcnRpYWxseXxObylcblxuKipRdWVzdGlvbjoqKiBXcml0ZSBhIHNpbXBsZSBib29rdGVzdCBleGFtcGxlIGZvciBmaXp6YnV6elxuXG4qKkFuc3dlcjoqKlxuQ3JlYXRlIHRlc3QvdGVzdF9maXp6YnV6ei5weSB0byBzbmFwc2hvdCBGaXp6QnV6eiBvdXRwdXQgKHNvIGZ1dHVyZSBjaGFuZ2VzIGFyZSByZXZpZXdhYmxlKS4gRXhhbXBsZTpcblxuYGBgcHl0aG9uXG5pbXBvcnQgYm9va3Rlc3QgYXMgYnRcblxuZGVmIGZpenpidXp6KG4pOlxuICAgIGlmIG4gJSAxNSA9PSAwOlxuICAgICAgICByZXR1cm4gXCJmaXp6YnV6elwiXG4gICAgaWYgbiAlIDMgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiZml6elwiXG4gICAgaWYgbiAlIDUgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiYnV6elwiXG4gICAgcmV0dXJuIHN0cihuKVxuXG5kZWYgdGVzdF9maXp6YnV6eih0OiBidC5UZXN0Q2FzZVJ1bik6XG4gICAgdC5oMShcIkZpenpCdXp6IDFcdTIwMTMxNVwiKVxuICAgIGZvciBpIGluIHJhbmdlKDEsIDE2KTpcbiAgICAgICAgdC50bG4oZlwie2l9OiB7Zml6emJ1enooaSl9XCIpXG5gYGBcblxuXG4jIyMjIEV2YWx1YXRpb246XG4ifV0sICJtb2RlbCI6ICJncHQtNS1taW5pIiwgIm1heF9jb21wbGV0aW9uX3Rva2VucyI6IDEwMjQsICJzZWVkIjogMH0=",
            "hash": "53be6da10d37425d11a9da1fccb6ae6729a5fef9"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:13:57 GMT",
                "content-type": "application/json",
                "content-length": "1033",
                "connection": "keep-alive",
                "apim-request-id": "21f25955-2750-4119-9b80-59272bcf9569",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "80",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71191",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d116-20251018210456",
                "x-ms-rai-invoked": "true",
                "x-request-id": "a8147d87-f92d-41ad-9892-605d8470a6b5",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMzUsImlkIjoiY2hhdGNtcGwtQ1NmSmI3RzBzTHI2RWxWQW16ajZnQjBTR2JlMG0iLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoyNTgsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjMzM319Cg=="
        }
    },
    "559aa79788149101f64d722965c301ef388930b5": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSXMgdGhlIGNvZGUgc3ludGFjdGljYWxseSB2YWxpZCBQeXRob24/IChZZXN8UGFydGlhbGx5fE5vKVxuXG4qKlF1ZXN0aW9uOioqIFdyaXRlIGEgc2ltcGxlIGJvb2t0ZXN0IGV4YW1wbGUgZm9yIGZpenpidXp6XG5cbioqQW5zd2VyOioqXG5DcmVhdGUgdGVzdC90ZXN0X2ZpenpidXp6LnB5IHRvIHNuYXBzaG90IEZpenpCdXp6IG91dHB1dCAoc28gZnV0dXJlIGNoYW5nZXMgYXJlIHJldmlld2FibGUpLiBFeGFtcGxlOlxuXG5gYGBweXRob25cbmltcG9ydCBib29rdGVzdCBhcyBidFxuXG5kZWYgZml6emJ1enoobik6XG4gICAgaWYgbiAlIDE1ID09IDA6XG4gICAgICAgIHJldHVybiBcImZpenpidXp6XCJcbiAgICBpZiBuICUgMyA9PSAwOlxuICAgICAgICByZXR1cm4gXCJmaXp6XCJcbiAgICBpZiBuICUgNSA9PSAwOlxuICAgICAgICByZXR1cm4gXCJidXp6XCJcbiAgICByZXR1cm4gc3RyKG4pXG5cbmRlZiB0ZXN0X2ZpenpidXp6KHQ6IGJ0LlRlc3RDYXNlUnVuKTpcbiAgICB0LmgxKFwiRml6ekJ1enogMVx1MjAxMzE1XCIpXG4gICAgZm9yIGkgaW4gcmFuZ2UoMSwgMTYpOlxuICAgICAgICB0LnRsbihmXCJ7aX06IHtmaXp6YnV6eihpKX1cIilcbmBgYFxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcbiJ9XSwgIm1vZGVsIjogImdwdC01LW1pbmkiLCAibWF4X2NvbXBsZXRpb25fdG9rZW5zIjogMTAyNCwgInNlZWQiOiAwfQ==",
            "hash": "559aa79788149101f64d722965c301ef388930b5"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:00 GMT",
                "content-type": "application/json",
                "content-length": "1035",
                "connection": "keep-alive",
                "apim-request-id": "53a1daa1-9884-4f94-8bd1-50e8e3366501",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "79",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "70965",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d117-20251018210456",
                "x-ms-rai-invoked": "true",
                "x-request-id": "f9d7a4cb-e4a8-4451-8eb7-e563ac008443",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwMzcsImlkIjoiY2hhdGNtcGwtQ1NmSmRpZUIzRzU4b0lJZHdtUXlRa1lhcWVTeGwiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoyMDMsImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTkyLCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjI1MiwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6NDU1fX0K"
        }
    },
    "ad0be56c20980da1de3924b39b1a5cfcc93993ef": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSG93IGNsZWFyIGFuZCB1bmRlcnN0YW5kYWJsZSBpcyB0aGUgY29kZSBleGFtcGxlPyAoRXhjZWxsZW50fEdvb2R8UG9vcilcblxuKipRdWVzdGlvbjoqKiBXcml0ZSBhIHNpbXBsZSBib29rdGVzdCBleGFtcGxlIGZvciBmaXp6YnV6elxuXG4qKkFuc3dlcjoqKlxuQ3JlYXRlIHRlc3QvdGVzdF9maXp6YnV6ei5weSB0byBzbmFwc2hvdCBGaXp6QnV6eiBvdXRwdXQgKHNvIGZ1dHVyZSBjaGFuZ2VzIGFyZSByZXZpZXdhYmxlKS4gRXhhbXBsZTpcblxuYGBgcHl0aG9uXG5pbXBvcnQgYm9va3Rlc3QgYXMgYnRcblxuZGVmIGZpenpidXp6KG4pOlxuICAgIGlmIG4gJSAxNSA9PSAwOlxuICAgICAgICByZXR1cm4gXCJmaXp6YnV6elwiXG4gICAgaWYgbiAlIDMgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiZml6elwiXG4gICAgaWYgbiAlIDUgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiYnV6elwiXG4gICAgcmV0dXJuIHN0cihuKVxuXG5kZWYgdGVzdF9maXp6YnV6eih0OiBidC5UZXN0Q2FzZVJ1bik6XG4gICAgdC5oMShcIkZpenpCdXp6IDFcdTIwMTMxNVwiKVxuICAgIGZvciBpIGluIHJhbmdlKDEsIDE2KTpcbiAgICAgICAgdC50bG4oZlwie2l9OiB7Zml6emJ1enooaSl9XCIpXG5gYGBcblxuXG4jIyMjIEV2YWx1YXRpb246XG5cbiMjIyMgUXVhbGl0eSByYXRpbmdzOlxuIn1dLCAibW9kZWwiOiAiZ3B0LTUtbWluaSIsICJtYXhfY29tcGxldGlvbl90b2tlbnMiOiAxMDI0LCAic2VlZCI6IDB9",
            "hash": "ad0be56c20980da1de3924b39b1a5cfcc93993ef"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:03 GMT",
                "content-type": "application/json",
                "content-length": "1041",
                "connection": "keep-alive",
                "apim-request-id": "288e0dc8-180f-4cd9-a1e3-6a694e5588c2",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "80",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71118",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d117-20251018210456",
                "x-ms-rai-invoked": "true",
                "x-request-id": "9817d31c-e58b-4f13-a1ba-e5512a6ffc27",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiRXhjZWxsZW50IiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwNDEsImlkIjoiY2hhdGNtcGwtQ1NmSmhYbWZDVkxFSFVOUjdaWGxLY3NlQll1c1oiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoxMzksImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTI4LCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjI1NSwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6Mzk0fX0K"
        }
    },
    "22ee506eb4aaa373da18dd01412691a301c5b727": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSG93IHdlbGwgZG9lcyB0aGUgZXhhbXBsZSBkZW1vbnN0cmF0ZSBib29rdGVzdCBmZWF0dXJlcz8gKEV4Y2VsbGVudHxHb29kfFBvb3IpXG5cbioqUXVlc3Rpb246KiogV3JpdGUgYSBzaW1wbGUgYm9va3Rlc3QgZXhhbXBsZSBmb3IgZml6emJ1enpcblxuKipBbnN3ZXI6KipcbkNyZWF0ZSB0ZXN0L3Rlc3RfZml6emJ1enoucHkgdG8gc25hcHNob3QgRml6ekJ1enogb3V0cHV0IChzbyBmdXR1cmUgY2hhbmdlcyBhcmUgcmV2aWV3YWJsZSkuIEV4YW1wbGU6XG5cbmBgYHB5dGhvblxuaW1wb3J0IGJvb2t0ZXN0IGFzIGJ0XG5cbmRlZiBmaXp6YnV6eihuKTpcbiAgICBpZiBuICUgMTUgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiZml6emJ1enpcIlxuICAgIGlmIG4gJSAzID09IDA6XG4gICAgICAgIHJldHVybiBcImZpenpcIlxuICAgIGlmIG4gJSA1ID09IDA6XG4gICAgICAgIHJldHVybiBcImJ1enpcIlxuICAgIHJldHVybiBzdHIobilcblxuZGVmIHRlc3RfZml6emJ1enoodDogYnQuVGVzdENhc2VSdW4pOlxuICAgIHQuaDEoXCJGaXp6QnV6eiAxXHUyMDEzMTVcIilcbiAgICBmb3IgaSBpbiByYW5nZSgxLCAxNik6XG4gICAgICAgIHQudGxuKGZcIntpfToge2ZpenpidXp6KGkpfVwiKVxuYGBgXG5cblxuIyMjIyBFdmFsdWF0aW9uOlxuXG4jIyMjIFF1YWxpdHkgcmF0aW5nczpcbiJ9XSwgIm1vZGVsIjogImdwdC01LW1pbmkiLCAibWF4X2NvbXBsZXRpb25fdG9rZW5zIjogMTAyNCwgInNlZWQiOiAwfQ==",
            "hash": "22ee506eb4aaa373da18dd01412691a301c5b727"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:07 GMT",
                "content-type": "application/json",
                "content-length": "1041",
                "connection": "keep-alive",
                "apim-request-id": "93ea5c9d-8c45-49a9-8b27-b576d9be20e0",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "80",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71084",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d119-20251018214812",
                "x-ms-rai-invoked": "true",
                "x-request-id": "318c648d-5e18-4f60-a9f0-3b78252eb97b",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiRXhjZWxsZW50IiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwNDMsImlkIjoiY2hhdGNtcGwtQ1NmSmpocXpIaURjVnRrQ1VuVEJFVkRKUjV2MlAiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoyNjcsImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MjU2LCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjI1NiwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6NTIzfX0K"
        }
    },
    "74f306bd490f71ccb2638b8cb02cf21892121987": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "",
            "hash": "74f306bd490f71ccb2638b8cb02cf21892121987"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:12 GMT",
                "content-type": "application/json",
                "content-length": "1447",
                "connection": "keep-alive",
                "apim-request-id": "0487666c-3aa7-409e-aadb-f5a3d9c1d594",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "80",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71076",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d114-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "9fac12b1-fcbf-46e3-806e-ab7732a6e0fc",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiQm9va3Rlc3QgbWFrZXMgbm9u4oCRZGV0ZXJtaW5pc3RpYyBvdXRwdXRzIHJlcHJvZHVjaWJsZSBieSByZWNvcmRpbmcgYW5kIHJlcGxheWluZyB0aGVtOiB1c2UgZGVjb3JhdG9ycyBsaWtlIEBidC5zbmFwc2hvdF9odHRweCgpL0BidC5zbmFwc2hvdF9yZXF1ZXN0cygpIHRvIGNhc3NldHRlIEhUVFAvTExNIGNhbGxzIGFuZCBAYnQuc25hcHNob3RfZnVuY3Rpb25zKHRpbWUudGltZSwgcmFuZG9tLnJhbmRvbSkgdG8gc3R1YiByYW5kb20vdGltZXN0YW1wcy4gRmlyc3QgcnVucyByZWNvcmQgc25hcHNob3RzIChpbmNsdWRpbmcgQUkgcmV2aWV3cykgYW5kIGNhY2hlZCB0ZXN0IHJldHVybnM7IHN1YnNlcXVlbnQgcnVucyByZXBsYXkgdGhvc2Ugc25hcHNob3RzIHNvIHRlc3RzIGJlaGF2ZSBkZXRlcm1pbmlzdGljYWxseS4iLCJyZWZ1c2FsIjpudWxsLCJyb2xlIjoiYXNzaXN0YW50In19XSwiY3JlYXRlZCI6MTc2MDk0ODA0NywiaWQiOiJjaGF0Y21wbC1DU2ZKbk80RHVTeGFibGhjRGZkRnd1Q0ZjaklBSiIsIm1vZGVsIjoiZ3B0LTUtbWluaS0yMDI1LTA4LTA3Iiwib2JqZWN0IjoiY2hhdC5jb21wbGV0aW9uIiwicHJvbXB0X2ZpbHRlcl9yZXN1bHRzIjpbeyJwcm9tcHRfaW5kZXgiOjAsImNvbnRlbnRfZmlsdGVyX3Jlc3VsdHMiOnsiaGF0ZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJzZWxmX2hhcm0iOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2V4dWFsIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInZpb2xlbmNlIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn19fV0sInN5c3RlbV9maW5nZXJwcmludCI6bnVsbCwidXNhZ2UiOnsiY29tcGxldGlvbl90b2tlbnMiOjM0NywiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjoyNTYsInJlamVjdGVkX3ByZWRpY3Rpb25fdG9rZW5zIjowfSwicHJvbXB0X3Rva2VucyI6ODUyMywicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6ODQ0OH0sInRvdGFsX3Rva2VucyI6ODg3MH19Cg=="
        }
    },
    "2ca1a4d244b26826b98c714d602b421f5ceb9af0": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBzbmFwc2hvdHMgb3Igc25hcHNob3QgdGVzdGluZz8gKFllc3xQYXJ0aWFsbHl8Tm8pXG5cbioqUXVlc3Rpb246KiogSG93IGRvZXMgYm9va3Rlc3QgaGFuZGxlIG5vbi1kZXRlcm1pbmlzdGljIHJlc3VsdHM/XG5cbioqQW5zd2VyOioqXG5Cb29rdGVzdCBtYWtlcyBub25cdTIwMTFkZXRlcm1pbmlzdGljIG91dHB1dHMgcmVwcm9kdWNpYmxlIGJ5IHJlY29yZGluZyBhbmQgcmVwbGF5aW5nIHRoZW06IHVzZSBkZWNvcmF0b3JzIGxpa2UgQGJ0LnNuYXBzaG90X2h0dHB4KCkvQGJ0LnNuYXBzaG90X3JlcXVlc3RzKCkgdG8gY2Fzc2V0dGUgSFRUUC9MTE0gY2FsbHMgYW5kIEBidC5zbmFwc2hvdF9mdW5jdGlvbnModGltZS50aW1lLCByYW5kb20ucmFuZG9tKSB0byBzdHViIHJhbmRvbS90aW1lc3RhbXBzLiBGaXJzdCBydW5zIHJlY29yZCBzbmFwc2hvdHMgKGluY2x1ZGluZyBBSSByZXZpZXdzKSBhbmQgY2FjaGVkIHRlc3QgcmV0dXJuczsgc3Vic2VxdWVudCBydW5zIHJlcGxheSB0aG9zZSBzbmFwc2hvdHMgc28gdGVzdHMgYmVoYXZlIGRldGVybWluaXN0aWNhbGx5LlxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcbiJ9XSwgIm1vZGVsIjogImdwdC01LW1pbmkiLCAibWF4X2NvbXBsZXRpb25fdG9rZW5zIjogMTAyNCwgInNlZWQiOiAwfQ==",
            "hash": "2ca1a4d244b26826b98c714d602b421f5ceb9af0"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:15 GMT",
                "content-type": "application/json",
                "content-length": "1033",
                "connection": "keep-alive",
                "apim-request-id": "2a166ad0-a614-46b4-91c7-b33cba7c760a",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "81",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71264",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d113-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "6e7373c9-0650-97cb-98ac-66d0a73d05c5",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwNTMsImlkIjoiY2hhdGNtcGwtQ1NmSnQwN2JnZ01vaE93ZmFBZVB3eVlMSG14bU0iLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoxOTEsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjI2Nn19Cg=="
        }
    },
    "120a9bad46860461f2b030c2cffce8d129d2b214": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBjYWNoaW5nIGludGVybWVkaWF0ZSByZXN1bHRzPyAoWWVzfFBhcnRpYWxseXxObylcblxuKipRdWVzdGlvbjoqKiBIb3cgZG9lcyBib29rdGVzdCBoYW5kbGUgbm9uLWRldGVybWluaXN0aWMgcmVzdWx0cz9cblxuKipBbnN3ZXI6KipcbkJvb2t0ZXN0IG1ha2VzIG5vblx1MjAxMWRldGVybWluaXN0aWMgb3V0cHV0cyByZXByb2R1Y2libGUgYnkgcmVjb3JkaW5nIGFuZCByZXBsYXlpbmcgdGhlbTogdXNlIGRlY29yYXRvcnMgbGlrZSBAYnQuc25hcHNob3RfaHR0cHgoKS9AYnQuc25hcHNob3RfcmVxdWVzdHMoKSB0byBjYXNzZXR0ZSBIVFRQL0xMTSBjYWxscyBhbmQgQGJ0LnNuYXBzaG90X2Z1bmN0aW9ucyh0aW1lLnRpbWUsIHJhbmRvbS5yYW5kb20pIHRvIHN0dWIgcmFuZG9tL3RpbWVzdGFtcHMuIEZpcnN0IHJ1bnMgcmVjb3JkIHNuYXBzaG90cyAoaW5jbHVkaW5nIEFJIHJldmlld3MpIGFuZCBjYWNoZWQgdGVzdCByZXR1cm5zOyBzdWJzZXF1ZW50IHJ1bnMgcmVwbGF5IHRob3NlIHNuYXBzaG90cyBzbyB0ZXN0cyBiZWhhdmUgZGV0ZXJtaW5pc3RpY2FsbHkuXG5cblxuIyMjIyBFdmFsdWF0aW9uOlxuIn1dLCAibW9kZWwiOiAiZ3B0LTUtbWluaSIsICJtYXhfY29tcGxldGlvbl90b2tlbnMiOiAxMDI0LCAic2VlZCI6IDB9",
            "hash": "120a9bad46860461f2b030c2cffce8d129d2b214"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:18 GMT",
                "content-type": "application/json",
                "content-length": "1035",
                "connection": "keep-alive",
                "apim-request-id": "9168a9c9-0a2f-4765-a95b-b238e8496288",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "82",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71456",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d113-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "851a3c19-d422-43ba-bd94-d3db89a225f4",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwNTUsImlkIjoiY2hhdGNtcGwtQ1NmSnZ2OEUwNzY4Njg1WUN3WXVVcFEwWHQxTEwiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoxMzksImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTI4LCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjE5MCwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6MzI5fX0K"
        }
    },
    "467c2589d810a0d0af6b6363b1134ffdd2bce736": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBtb2NraW5nIGZ1bmN0aW9ucyBvciBlbnZpcm9ubWVudCB2YXJpYWJsZXM/IChZZXN8UGFydGlhbGx5fE5vKVxuXG4qKlF1ZXN0aW9uOioqIEhvdyBkb2VzIGJvb2t0ZXN0IGhhbmRsZSBub24tZGV0ZXJtaW5pc3RpYyByZXN1bHRzP1xuXG4qKkFuc3dlcjoqKlxuQm9va3Rlc3QgbWFrZXMgbm9uXHUyMDExZGV0ZXJtaW5pc3RpYyBvdXRwdXRzIHJlcHJvZHVjaWJsZSBieSByZWNvcmRpbmcgYW5kIHJlcGxheWluZyB0aGVtOiB1c2UgZGVjb3JhdG9ycyBsaWtlIEBidC5zbmFwc2hvdF9odHRweCgpL0BidC5zbmFwc2hvdF9yZXF1ZXN0cygpIHRvIGNhc3NldHRlIEhUVFAvTExNIGNhbGxzIGFuZCBAYnQuc25hcHNob3RfZnVuY3Rpb25zKHRpbWUudGltZSwgcmFuZG9tLnJhbmRvbSkgdG8gc3R1YiByYW5kb20vdGltZXN0YW1wcy4gRmlyc3QgcnVucyByZWNvcmQgc25hcHNob3RzIChpbmNsdWRpbmcgQUkgcmV2aWV3cykgYW5kIGNhY2hlZCB0ZXN0IHJldHVybnM7IHN1YnNlcXVlbnQgcnVucyByZXBsYXkgdGhvc2Ugc25hcHNob3RzIHNvIHRlc3RzIGJlaGF2ZSBkZXRlcm1pbmlzdGljYWxseS5cblxuXG4jIyMjIEV2YWx1YXRpb246XG4ifV0sICJtb2RlbCI6ICJncHQtNS1taW5pIiwgIm1heF9jb21wbGV0aW9uX3Rva2VucyI6IDEwMjQsICJzZWVkIjogMH0=",
            "hash": "467c2589d810a0d0af6b6363b1134ffdd2bce736"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:25 GMT",
                "content-type": "application/json",
                "content-length": "1041",
                "connection": "keep-alive",
                "apim-request-id": "9d7d2d00-3785-48df-aa26-0e028dbf77bc",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "82",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71444",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d036-20251018202208",
                "x-ms-rai-invoked": "true",
                "x-request-id": "facdaccf-840a-4262-87b7-5a43fa9c3ca9",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiUGFydGlhbGx5IiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwNTgsImlkIjoiY2hhdGNtcGwtQ1NmSnlDajQ3V2ZRSkdmTlpIZ0ExS0RtdjdrY1YiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjozMzIsImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MzIwLCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjE5MiwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6NTI0fX0K"
        }
    },
    "4653fa725fd69b3a74c045022f25c7b8ae491ec3": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSG93IHdlbGwgZG9lcyB0aGUgYW5zd2VyIGV4cGxhaW4gdGhlIHRlY2huaWNhbCBhcHByb2FjaD8gKEV4Y2VsbGVudHxHb29kfFBvb3IpXG5cbioqUXVlc3Rpb246KiogSG93IGRvZXMgYm9va3Rlc3QgaGFuZGxlIG5vbi1kZXRlcm1pbmlzdGljIHJlc3VsdHM/XG5cbioqQW5zd2VyOioqXG5Cb29rdGVzdCBtYWtlcyBub25cdTIwMTFkZXRlcm1pbmlzdGljIG91dHB1dHMgcmVwcm9kdWNpYmxlIGJ5IHJlY29yZGluZyBhbmQgcmVwbGF5aW5nIHRoZW06IHVzZSBkZWNvcmF0b3JzIGxpa2UgQGJ0LnNuYXBzaG90X2h0dHB4KCkvQGJ0LnNuYXBzaG90X3JlcXVlc3RzKCkgdG8gY2Fzc2V0dGUgSFRUUC9MTE0gY2FsbHMgYW5kIEBidC5zbmFwc2hvdF9mdW5jdGlvbnModGltZS50aW1lLCByYW5kb20ucmFuZG9tKSB0byBzdHViIHJhbmRvbS90aW1lc3RhbXBzLiBGaXJzdCBydW5zIHJlY29yZCBzbmFwc2hvdHMgKGluY2x1ZGluZyBBSSByZXZpZXdzKSBhbmQgY2FjaGVkIHRlc3QgcmV0dXJuczsgc3Vic2VxdWVudCBydW5zIHJlcGxheSB0aG9zZSBzbmFwc2hvdHMgc28gdGVzdHMgYmVoYXZlIGRldGVybWluaXN0aWNhbGx5LlxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcblxuIyMjIyBRdWFsaXR5IHJhdGluZ3M6XG4ifV0sICJtb2RlbCI6ICJncHQtNS1taW5pIiwgIm1heF9jb21wbGV0aW9uX3Rva2VucyI6IDEwMjQsICJzZWVkIjogMH0=",
            "hash": "4653fa725fd69b3a74c045022f25c7b8ae491ec3"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:28 GMT",
                "content-type": "application/json",
                "content-length": "1041",
                "connection": "keep-alive",
                "apim-request-id": "4e22a378-8c28-4cc9-a5e5-518438ded2db",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "83",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "79825",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d037-20251018211318",
                "x-ms-rai-invoked": "true",
                "x-request-id": "9c4fada0-6f36-402b-ae85-fe45d21615a3",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiRXhjZWxsZW50IiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwNjUsImlkIjoiY2hhdGNtcGwtQ1NmSzU0aW1ZRlR3N3MwVWZuTlVBZkVtS3JxNm0iLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjoxMzksImNvbXBsZXRpb25fdG9rZW5zX2RldGFpbHMiOnsiYWNjZXB0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjAsImF1ZGlvX3Rva2VucyI6MCwicmVhc29uaW5nX3Rva2VucyI6MTI4LCJyZWplY3RlZF9wcmVkaWN0aW9uX3Rva2VucyI6MH0sInByb21wdF90b2tlbnMiOjE5NiwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6MH0sInRvdGFsX3Rva2VucyI6MzM1fX0K"
        }
    },
    "33cc36bdd3db005e8d2b306c547d2aeb33889aee": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSG93IHByYWN0aWNhbCBhbmQgYWN0aW9uYWJsZSBpcyB0aGUgZXhwbGFuYXRpb24/IChFeGNlbGxlbnR8R29vZHxQb29yKVxuXG4qKlF1ZXN0aW9uOioqIEhvdyBkb2VzIGJvb2t0ZXN0IGhhbmRsZSBub24tZGV0ZXJtaW5pc3RpYyByZXN1bHRzP1xuXG4qKkFuc3dlcjoqKlxuQm9va3Rlc3QgbWFrZXMgbm9uXHUyMDExZGV0ZXJtaW5pc3RpYyBvdXRwdXRzIHJlcHJvZHVjaWJsZSBieSByZWNvcmRpbmcgYW5kIHJlcGxheWluZyB0aGVtOiB1c2UgZGVjb3JhdG9ycyBsaWtlIEBidC5zbmFwc2hvdF9odHRweCgpL0BidC5zbmFwc2hvdF9yZXF1ZXN0cygpIHRvIGNhc3NldHRlIEhUVFAvTExNIGNhbGxzIGFuZCBAYnQuc25hcHNob3RfZnVuY3Rpb25zKHRpbWUudGltZSwgcmFuZG9tLnJhbmRvbSkgdG8gc3R1YiByYW5kb20vdGltZXN0YW1wcy4gRmlyc3QgcnVucyByZWNvcmQgc25hcHNob3RzIChpbmNsdWRpbmcgQUkgcmV2aWV3cykgYW5kIGNhY2hlZCB0ZXN0IHJldHVybnM7IHN1YnNlcXVlbnQgcnVucyByZXBsYXkgdGhvc2Ugc25hcHNob3RzIHNvIHRlc3RzIGJlaGF2ZSBkZXRlcm1pbmlzdGljYWxseS5cblxuXG4jIyMjIEV2YWx1YXRpb246XG5cbiMjIyMgUXVhbGl0eSByYXRpbmdzOlxuIn1dLCAibW9kZWwiOiAiZ3B0LTUtbWluaSIsICJtYXhfY29tcGxldGlvbl90b2tlbnMiOiAxMDI0LCAic2VlZCI6IDB9",
            "hash": "33cc36bdd3db005e8d2b306c547d2aeb33889aee"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:30 GMT",
                "content-type": "application/json",
                "content-length": "1039",
                "connection": "keep-alive",
                "apim-request-id": "089c550f-13c0-47e9-aebe-75a036789508",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "83",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "79796",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d119-20251018214812",
                "x-ms-rai-invoked": "true",
                "x-request-id": "3e5a55b8-5f26-4e7f-b448-f28bb7932cab",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiRXhjZWxsZW50IiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwNjgsImlkIjoiY2hhdGNtcGwtQ1NmSzg4c21MMEJxSldvcWtxNEgxMDZDcElScGwiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoxOTQsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjI2OX19Cg=="
        }
    },
    "7f2d8bf271c22d02503f8683e6445694a61411f9": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "",
            "hash": "7f2d8bf271c22d02503f8683e6445694a61411f9"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:36 GMT",
                "content-type": "application/json",
                "content-length": "1522",
                "connection": "keep-alive",
                "apim-request-id": "e12467bd-f08b-4653-8905-a2ac07f760e4",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "83",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71574",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d114-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "7002f407-7af1-49d6-b0ae-4482c8b0b106",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiSW5zdGFsbCBib29rdGVzdCAocGlwIGluc3RhbGwgYm9va3Rlc3QpIGFuZCBydW4gYm9va3Rlc3QgLS1zZXR1cCwgdGhlbiBhZGQgdGVzdHMgdW5kZXIgdGVzdC8gYXMgZnVuY3Rpb25zIHRha2luZyB0OiBidC5UZXN0Q2FzZVJ1biB0aGF0IHVzZSB0LmgxL3QudGxuL3QudGRmL3RtZXRyaWMvZXRjLiB0byBwcm9kdWNlIHNuYXBzaG90cyBhbmQgcnVuIHRoZW0gd2l0aCB0aGUgQ0xJIChib29rdGVzdCB0ZXN0KS4gVXNlIGRlY29yYXRvcnMgbGlrZSBAYnQuc25hcHNob3RfaHR0cHgoKSwgQGJ0LnNuYXBzaG90X2Z1bmN0aW9ucygpLCBhbmQgQGJ0LmRlcGVuZHNfb24oKSB0byBtb2NrIGV4dGVybmFsIGNhbGxzIGFuZCBjb21wb3NlIHBpcGVsaW5lIHN0ZXBzLCBjb21taXQgdGhlIGdlbmVyYXRlZCBib29rcy8gbWFya2Rvd24gdG8gR2l0ICh1c2UgRFZDIGZvciBsYXJnZSBjYXNzZXR0ZXMpIGFuZCBydW4gaW4gQ0kgd2l0aCBib29rdGVzdCB0ZXN0IC1wTi4iLCJyZWZ1c2FsIjpudWxsLCJyb2xlIjoiYXNzaXN0YW50In19XSwiY3JlYXRlZCI6MTc2MDk0ODA3MCwiaWQiOiJjaGF0Y21wbC1DU2ZLQW5YOUNEaW9YUHVXNFp3NEZhOHI1c0d4YSIsIm1vZGVsIjoiZ3B0LTUtbWluaS0yMDI1LTA4LTA3Iiwib2JqZWN0IjoiY2hhdC5jb21wbGV0aW9uIiwicHJvbXB0X2ZpbHRlcl9yZXN1bHRzIjpbeyJwcm9tcHRfaW5kZXgiOjAsImNvbnRlbnRfZmlsdGVyX3Jlc3VsdHMiOnsiaGF0ZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJzZWxmX2hhcm0iOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2V4dWFsIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInZpb2xlbmNlIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn19fV0sInN5c3RlbV9maW5nZXJwcmludCI6bnVsbCwidXNhZ2UiOnsiY29tcGxldGlvbl90b2tlbnMiOjQ1MCwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjozMjAsInJlamVjdGVkX3ByZWRpY3Rpb25fdG9rZW5zIjowfSwicHJvbXB0X3Rva2VucyI6ODUyNCwicHJvbXB0X3Rva2Vuc19kZXRhaWxzIjp7ImF1ZGlvX3Rva2VucyI6MCwiY2FjaGVkX3Rva2VucyI6ODQ0OH0sInRvdGFsX3Rva2VucyI6ODk3NH19Cg=="
        }
    },
    "08705a9926f0d6ff45ec1a75f06cf42f59b2c1ee": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiAncGlwIGluc3RhbGwgYm9va3Rlc3QnIG9yIGluc3RhbGxhdGlvbj8gKFllc3xQYXJ0aWFsbHl8Tm8pXG5cbioqUXVlc3Rpb246KiogSG93IGRvIEkgaW50ZWdyYXRlIGJvb2t0ZXN0IGludG8gbXkgZXhpc3RpbmcgUHl0aG9uIHByb2plY3Q/XG5cbioqQW5zd2VyOioqXG5JbnN0YWxsIGJvb2t0ZXN0IChwaXAgaW5zdGFsbCBib29rdGVzdCkgYW5kIHJ1biBib29rdGVzdCAtLXNldHVwLCB0aGVuIGFkZCB0ZXN0cyB1bmRlciB0ZXN0LyBhcyBmdW5jdGlvbnMgdGFraW5nIHQ6IGJ0LlRlc3RDYXNlUnVuIHRoYXQgdXNlIHQuaDEvdC50bG4vdC50ZGYvdG1ldHJpYy9ldGMuIHRvIHByb2R1Y2Ugc25hcHNob3RzIGFuZCBydW4gdGhlbSB3aXRoIHRoZSBDTEkgKGJvb2t0ZXN0IHRlc3QpLiBVc2UgZGVjb3JhdG9ycyBsaWtlIEBidC5zbmFwc2hvdF9odHRweCgpLCBAYnQuc25hcHNob3RfZnVuY3Rpb25zKCksIGFuZCBAYnQuZGVwZW5kc19vbigpIHRvIG1vY2sgZXh0ZXJuYWwgY2FsbHMgYW5kIGNvbXBvc2UgcGlwZWxpbmUgc3RlcHMsIGNvbW1pdCB0aGUgZ2VuZXJhdGVkIGJvb2tzLyBtYXJrZG93biB0byBHaXQgKHVzZSBEVkMgZm9yIGxhcmdlIGNhc3NldHRlcykgYW5kIHJ1biBpbiBDSSB3aXRoIGJvb2t0ZXN0IHRlc3QgLXBOLlxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcbiJ9XSwgIm1vZGVsIjogImdwdC01LW1pbmkiLCAibWF4X2NvbXBsZXRpb25fdG9rZW5zIjogMTAyNCwgInNlZWQiOiAwfQ==",
            "hash": "08705a9926f0d6ff45ec1a75f06cf42f59b2c1ee"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:38 GMT",
                "content-type": "application/json",
                "content-length": "1033",
                "connection": "keep-alive",
                "apim-request-id": "8ae09e7c-69d6-4497-8f27-5c51396c334c",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "84",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "71738",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d115-20251018210456",
                "x-ms-rai-invoked": "true",
                "x-request-id": "63c2b752-a16e-4ff9-8dfa-25c402ba972d",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwNzYsImlkIjoiY2hhdGNtcGwtQ1NmS0dqSzJFaGVGRlpiSEdNSkZzN3pWWDdLRXQiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoyMzUsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjMxMH19Cg=="
        }
    },
    "eb8ecebb8a3d97e2fb2a2764c53818d73c2dfa51": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBjcmVhdGluZyBhIHRlc3QgZGlyZWN0b3J5PyAoWWVzfFBhcnRpYWxseXxObylcblxuKipRdWVzdGlvbjoqKiBIb3cgZG8gSSBpbnRlZ3JhdGUgYm9va3Rlc3QgaW50byBteSBleGlzdGluZyBQeXRob24gcHJvamVjdD9cblxuKipBbnN3ZXI6Kipcbkluc3RhbGwgYm9va3Rlc3QgKHBpcCBpbnN0YWxsIGJvb2t0ZXN0KSBhbmQgcnVuIGJvb2t0ZXN0IC0tc2V0dXAsIHRoZW4gYWRkIHRlc3RzIHVuZGVyIHRlc3QvIGFzIGZ1bmN0aW9ucyB0YWtpbmcgdDogYnQuVGVzdENhc2VSdW4gdGhhdCB1c2UgdC5oMS90LnRsbi90LnRkZi90bWV0cmljL2V0Yy4gdG8gcHJvZHVjZSBzbmFwc2hvdHMgYW5kIHJ1biB0aGVtIHdpdGggdGhlIENMSSAoYm9va3Rlc3QgdGVzdCkuIFVzZSBkZWNvcmF0b3JzIGxpa2UgQGJ0LnNuYXBzaG90X2h0dHB4KCksIEBidC5zbmFwc2hvdF9mdW5jdGlvbnMoKSwgYW5kIEBidC5kZXBlbmRzX29uKCkgdG8gbW9jayBleHRlcm5hbCBjYWxscyBhbmQgY29tcG9zZSBwaXBlbGluZSBzdGVwcywgY29tbWl0IHRoZSBnZW5lcmF0ZWQgYm9va3MvIG1hcmtkb3duIHRvIEdpdCAodXNlIERWQyBmb3IgbGFyZ2UgY2Fzc2V0dGVzKSBhbmQgcnVuIGluIENJIHdpdGggYm9va3Rlc3QgdGVzdCAtcE4uXG5cblxuIyMjIyBFdmFsdWF0aW9uOlxuIn1dLCAibW9kZWwiOiAiZ3B0LTUtbWluaSIsICJtYXhfY29tcGxldGlvbl90b2tlbnMiOiAxMDI0LCAic2VlZCI6IDB9",
            "hash": "eb8ecebb8a3d97e2fb2a2764c53818d73c2dfa51"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:40 GMT",
                "content-type": "application/json",
                "content-length": "1033",
                "connection": "keep-alive",
                "apim-request-id": "b354d97d-984f-42c5-8a55-f19045ef613b",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "84",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "79910",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d037-20251018211318",
                "x-ms-rai-invoked": "true",
                "x-request-id": "7a03af3a-0aec-48a6-93da-dcce3688153f",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwNzgsImlkIjoiY2hhdGNtcGwtQ1NmS0l6M2JMczZiQmhlamE5VjVyVmxlRTZtc0IiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoyMzEsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjMwNn19Cg=="
        }
    },
    "fb7f2577eda86afe0a710928ac09f44863af5535": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuRG9lcyBhbnN3ZXIgbWVudGlvbiBydW5uaW5nICdib29rdGVzdCcgY29tbWFuZCBvciBDTEk/IChZZXN8UGFydGlhbGx5fE5vKVxuXG4qKlF1ZXN0aW9uOioqIEhvdyBkbyBJIGludGVncmF0ZSBib29rdGVzdCBpbnRvIG15IGV4aXN0aW5nIFB5dGhvbiBwcm9qZWN0P1xuXG4qKkFuc3dlcjoqKlxuSW5zdGFsbCBib29rdGVzdCAocGlwIGluc3RhbGwgYm9va3Rlc3QpIGFuZCBydW4gYm9va3Rlc3QgLS1zZXR1cCwgdGhlbiBhZGQgdGVzdHMgdW5kZXIgdGVzdC8gYXMgZnVuY3Rpb25zIHRha2luZyB0OiBidC5UZXN0Q2FzZVJ1biB0aGF0IHVzZSB0LmgxL3QudGxuL3QudGRmL3RtZXRyaWMvZXRjLiB0byBwcm9kdWNlIHNuYXBzaG90cyBhbmQgcnVuIHRoZW0gd2l0aCB0aGUgQ0xJIChib29rdGVzdCB0ZXN0KS4gVXNlIGRlY29yYXRvcnMgbGlrZSBAYnQuc25hcHNob3RfaHR0cHgoKSwgQGJ0LnNuYXBzaG90X2Z1bmN0aW9ucygpLCBhbmQgQGJ0LmRlcGVuZHNfb24oKSB0byBtb2NrIGV4dGVybmFsIGNhbGxzIGFuZCBjb21wb3NlIHBpcGVsaW5lIHN0ZXBzLCBjb21taXQgdGhlIGdlbmVyYXRlZCBib29rcy8gbWFya2Rvd24gdG8gR2l0ICh1c2UgRFZDIGZvciBsYXJnZSBjYXNzZXR0ZXMpIGFuZCBydW4gaW4gQ0kgd2l0aCBib29rdGVzdCB0ZXN0IC1wTi5cblxuXG4jIyMjIEV2YWx1YXRpb246XG4ifV0sICJtb2RlbCI6ICJncHQtNS1taW5pIiwgIm1heF9jb21wbGV0aW9uX3Rva2VucyI6IDEwMjQsICJzZWVkIjogMH0=",
            "hash": "fb7f2577eda86afe0a710928ac09f44863af5535"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:42 GMT",
                "content-type": "application/json",
                "content-length": "1033",
                "connection": "keep-alive",
                "apim-request-id": "c0316a2e-9e2f-48b8-aff3-07cba6e9f901",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "83",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "79663",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d036-20251018202208",
                "x-ms-rai-invoked": "true",
                "x-request-id": "817da8c6-4348-449e-a51a-b057f0fe2aae",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiWWVzIiwicmVmdXNhbCI6bnVsbCwicm9sZSI6ImFzc2lzdGFudCJ9fV0sImNyZWF0ZWQiOjE3NjA5NDgwODAsImlkIjoiY2hhdGNtcGwtQ1NmS0tPOUJKaVo0bnl2ajdTRllZakhpemZOQjgiLCJtb2RlbCI6ImdwdC01LW1pbmktMjAyNS0wOC0wNyIsIm9iamVjdCI6ImNoYXQuY29tcGxldGlvbiIsInByb21wdF9maWx0ZXJfcmVzdWx0cyI6W3sicHJvbXB0X2luZGV4IjowLCJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fX1dLCJzeXN0ZW1fZmluZ2VycHJpbnQiOm51bGwsInVzYWdlIjp7ImNvbXBsZXRpb25fdG9rZW5zIjo3NSwiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6eyJhY2NlcHRlZF9wcmVkaWN0aW9uX3Rva2VucyI6MCwiYXVkaW9fdG9rZW5zIjowLCJyZWFzb25pbmdfdG9rZW5zIjo2NCwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoyMzUsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjMxMH19Cg=="
        }
    },
    "ecd4269dbcaa4735461de104702998a072c4d821": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSG93IGNvbXBsZXRlIGlzIHRoZSBpbnRlZ3JhdGlvbiBndWlkZT8gKEV4Y2VsbGVudHxHb29kfFBvb3IpXG5cbioqUXVlc3Rpb246KiogSG93IGRvIEkgaW50ZWdyYXRlIGJvb2t0ZXN0IGludG8gbXkgZXhpc3RpbmcgUHl0aG9uIHByb2plY3Q/XG5cbioqQW5zd2VyOioqXG5JbnN0YWxsIGJvb2t0ZXN0IChwaXAgaW5zdGFsbCBib29rdGVzdCkgYW5kIHJ1biBib29rdGVzdCAtLXNldHVwLCB0aGVuIGFkZCB0ZXN0cyB1bmRlciB0ZXN0LyBhcyBmdW5jdGlvbnMgdGFraW5nIHQ6IGJ0LlRlc3RDYXNlUnVuIHRoYXQgdXNlIHQuaDEvdC50bG4vdC50ZGYvdG1ldHJpYy9ldGMuIHRvIHByb2R1Y2Ugc25hcHNob3RzIGFuZCBydW4gdGhlbSB3aXRoIHRoZSBDTEkgKGJvb2t0ZXN0IHRlc3QpLiBVc2UgZGVjb3JhdG9ycyBsaWtlIEBidC5zbmFwc2hvdF9odHRweCgpLCBAYnQuc25hcHNob3RfZnVuY3Rpb25zKCksIGFuZCBAYnQuZGVwZW5kc19vbigpIHRvIG1vY2sgZXh0ZXJuYWwgY2FsbHMgYW5kIGNvbXBvc2UgcGlwZWxpbmUgc3RlcHMsIGNvbW1pdCB0aGUgZ2VuZXJhdGVkIGJvb2tzLyBtYXJrZG93biB0byBHaXQgKHVzZSBEVkMgZm9yIGxhcmdlIGNhc3NldHRlcykgYW5kIHJ1biBpbiBDSSB3aXRoIGJvb2t0ZXN0IHRlc3QgLXBOLlxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcblxuIyMjIyBRdWFsaXR5IHJhdGluZ3M6XG4ifV0sICJtb2RlbCI6ICJncHQtNS1taW5pIiwgIm1heF9jb21wbGV0aW9uX3Rva2VucyI6IDEwMjQsICJzZWVkIjogMH0=",
            "hash": "ecd4269dbcaa4735461de104702998a072c4d821"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:45 GMT",
                "content-type": "application/json",
                "content-length": "1036",
                "connection": "keep-alive",
                "apim-request-id": "e12773c6-5281-4317-a131-854b5b6f9072",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "82",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "79414",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d112-20251018202209",
                "x-ms-rai-invoked": "true",
                "x-request-id": "55165659-0f69-482b-996a-bd38742bd584",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiR29vZCIsInJlZnVzYWwiOm51bGwsInJvbGUiOiJhc3Npc3RhbnQifX1dLCJjcmVhdGVkIjoxNzYwOTQ4MDgyLCJpZCI6ImNoYXRjbXBsLUNTZktNQzFOOEE5VFBhNW9NckxVbXFKTDl5dUpGIiwibW9kZWwiOiJncHQtNS1taW5pLTIwMjUtMDgtMDciLCJvYmplY3QiOiJjaGF0LmNvbXBsZXRpb24iLCJwcm9tcHRfZmlsdGVyX3Jlc3VsdHMiOlt7InByb21wdF9pbmRleCI6MCwiY29udGVudF9maWx0ZXJfcmVzdWx0cyI6eyJoYXRlIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNlbGZfaGFybSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJzZXh1YWwiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwidmlvbGVuY2UiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifX19XSwic3lzdGVtX2ZpbmdlcnByaW50IjpudWxsLCJ1c2FnZSI6eyJjb21wbGV0aW9uX3Rva2VucyI6MjAzLCJjb21wbGV0aW9uX3Rva2Vuc19kZXRhaWxzIjp7ImFjY2VwdGVkX3ByZWRpY3Rpb25fdG9rZW5zIjowLCJhdWRpb190b2tlbnMiOjAsInJlYXNvbmluZ190b2tlbnMiOjE5MiwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoyMzMsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjQzNn19Cg=="
        }
    },
    "2686093b37a76bc00f41326248397c8dbeda8529": {
        "request": {
            "url": "https://lumswectestopenai.openai.azure.com/openai/deployments/gpt5-mini-dz/chat/completions?api-version=2024-12-01-preview",
            "method": "POST",
            "body": "eyJtZXNzYWdlcyI6IFt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIllvdSBhcmUgYW4gZXhwZXJ0IHJldmlld2VyIGZvciB0ZXN0IHJlc3VsdHMuIFlvdSBhcmUgZ2l2ZW4gcXVlc3Rpb24gaW4gZm9ybWF0OlxuXG5RdWVzdGlvbj8gKG9wdGlvbkF8b3B0aW9uQnxvcHRpb25DfC4uLilcblxucmV2aWV3ZWQgbWF0ZXJpYWxcblxuUmVzcG9uZCBvbmx5IHdpdGggdGhlIGV4YWN0IG9wdGlvbiB0aGF0IGJlc3QgYW5zd2VycyB0aGUgcXVlc3Rpb24hIERvIG5vdCBwcm9kdWNlIGFueVxub3RoZXIgdGV4dCBvciBleHBsYW5hdGlvbiEgT25seSByZXNwb25kIHdpdGggb25lIG9mIHRoZSBvcHRpb25zIGdpdmVuIGluIHRoZSBwYXJlbnRoZXNlcy5cblxuSG93IGVhc3kgd291bGQgaXQgYmUgdG8gZm9sbG93IHRoZXNlIGluc3RydWN0aW9ucz8gKEV4Y2VsbGVudHxHb29kfFBvb3IpXG5cbioqUXVlc3Rpb246KiogSG93IGRvIEkgaW50ZWdyYXRlIGJvb2t0ZXN0IGludG8gbXkgZXhpc3RpbmcgUHl0aG9uIHByb2plY3Q/XG5cbioqQW5zd2VyOioqXG5JbnN0YWxsIGJvb2t0ZXN0IChwaXAgaW5zdGFsbCBib29rdGVzdCkgYW5kIHJ1biBib29rdGVzdCAtLXNldHVwLCB0aGVuIGFkZCB0ZXN0cyB1bmRlciB0ZXN0LyBhcyBmdW5jdGlvbnMgdGFraW5nIHQ6IGJ0LlRlc3RDYXNlUnVuIHRoYXQgdXNlIHQuaDEvdC50bG4vdC50ZGYvdG1ldHJpYy9ldGMuIHRvIHByb2R1Y2Ugc25hcHNob3RzIGFuZCBydW4gdGhlbSB3aXRoIHRoZSBDTEkgKGJvb2t0ZXN0IHRlc3QpLiBVc2UgZGVjb3JhdG9ycyBsaWtlIEBidC5zbmFwc2hvdF9odHRweCgpLCBAYnQuc25hcHNob3RfZnVuY3Rpb25zKCksIGFuZCBAYnQuZGVwZW5kc19vbigpIHRvIG1vY2sgZXh0ZXJuYWwgY2FsbHMgYW5kIGNvbXBvc2UgcGlwZWxpbmUgc3RlcHMsIGNvbW1pdCB0aGUgZ2VuZXJhdGVkIGJvb2tzLyBtYXJrZG93biB0byBHaXQgKHVzZSBEVkMgZm9yIGxhcmdlIGNhc3NldHRlcykgYW5kIHJ1biBpbiBDSSB3aXRoIGJvb2t0ZXN0IHRlc3QgLXBOLlxuXG5cbiMjIyMgRXZhbHVhdGlvbjpcblxuIyMjIyBRdWFsaXR5IHJhdGluZ3M6XG4ifV0sICJtb2RlbCI6ICJncHQtNS1taW5pIiwgIm1heF9jb21wbGV0aW9uX3Rva2VucyI6IDEwMjQsICJzZWVkIjogMH0=",
            "hash": "2686093b37a76bc00f41326248397c8dbeda8529"
        },
        "response": {
            "headers": {
                "date": "Mon, 20 Oct 2025 08:14:48 GMT",
                "content-type": "application/json",
                "content-length": "1036",
                "connection": "keep-alive",
                "apim-request-id": "bf1ec874-74cf-4bdb-8a5f-be7f89d11cd8",
                "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                "x-content-type-options": "nosniff",
                "x-ms-region": "Sweden Central",
                "x-ratelimit-remaining-requests": "81",
                "x-ratelimit-limit-requests": "100",
                "x-ratelimit-remaining-tokens": "79162",
                "x-ratelimit-limit-tokens": "100000",
                "azureml-model-session": "d117-20251018210456",
                "x-ms-rai-invoked": "true",
                "x-request-id": "156a8c9e-d381-4cc4-b97d-69b21562a34e",
                "x-ms-deployment-name": "gpt5-mini-dz"
            },
            "statusCode": 200,
            "content": "eyJjaG9pY2VzIjpbeyJjb250ZW50X2ZpbHRlcl9yZXN1bHRzIjp7ImhhdGUiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwic2VsZl9oYXJtIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNleHVhbCI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJ2aW9sZW5jZSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9fSwiZmluaXNoX3JlYXNvbiI6InN0b3AiLCJpbmRleCI6MCwibG9ncHJvYnMiOm51bGwsIm1lc3NhZ2UiOnsiYW5ub3RhdGlvbnMiOltdLCJjb250ZW50IjoiR29vZCIsInJlZnVzYWwiOm51bGwsInJvbGUiOiJhc3Npc3RhbnQifX1dLCJjcmVhdGVkIjoxNzYwOTQ4MDg1LCJpZCI6ImNoYXRjbXBsLUNTZktQU2M1c3RuMXczSjVTNGhLT1l0WkNNbGVJIiwibW9kZWwiOiJncHQtNS1taW5pLTIwMjUtMDgtMDciLCJvYmplY3QiOiJjaGF0LmNvbXBsZXRpb24iLCJwcm9tcHRfZmlsdGVyX3Jlc3VsdHMiOlt7InByb21wdF9pbmRleCI6MCwiY29udGVudF9maWx0ZXJfcmVzdWx0cyI6eyJoYXRlIjp7ImZpbHRlcmVkIjpmYWxzZSwic2V2ZXJpdHkiOiJzYWZlIn0sInNlbGZfaGFybSI6eyJmaWx0ZXJlZCI6ZmFsc2UsInNldmVyaXR5Ijoic2FmZSJ9LCJzZXh1YWwiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifSwidmlvbGVuY2UiOnsiZmlsdGVyZWQiOmZhbHNlLCJzZXZlcml0eSI6InNhZmUifX19XSwic3lzdGVtX2ZpbmdlcnByaW50IjpudWxsLCJ1c2FnZSI6eyJjb21wbGV0aW9uX3Rva2VucyI6MjAzLCJjb21wbGV0aW9uX3Rva2Vuc19kZXRhaWxzIjp7ImFjY2VwdGVkX3ByZWRpY3Rpb25fdG9rZW5zIjowLCJhdWRpb190b2tlbnMiOjAsInJlYXNvbmluZ190b2tlbnMiOjE5MiwicmVqZWN0ZWRfcHJlZGljdGlvbl90b2tlbnMiOjB9LCJwcm9tcHRfdG9rZW5zIjoyMzYsInByb21wdF90b2tlbnNfZGV0YWlscyI6eyJhdWRpb190b2tlbnMiOjAsImNhY2hlZF90b2tlbnMiOjB9LCJ0b3RhbF90b2tlbnMiOjQzOX19Cg=="
        }
    }
}